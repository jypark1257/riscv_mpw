# RISC-V GCC Compilers
# riscv64-linux-gnu-gcc - Compiler from system packages (for local dev)
# riscv64-unknown-elf-gcc - From SiFive (on c125m/eda machines)

RISCV_CUSTOM := /opt/riscv_custom/bin/riscv64-unknown-elf
RISCV_DEFAULT := riscv64-unknown-elf

ifeq ($(GCC_CUSTOM), true)
    RISCV := $(RISCV_DEFAULT)
else
    RISCV := $(RISCV_CUSTOM)
endif

LIB_PATH := ../rv_lib
LIB_SOURCES := $(wildcard ../rv_lib/*.c)
CSRCS := $(wildcard *.c)
SSRCS := $(wildcard *.s)

LDSRC := ../linker_script.ld

# ifeq ($(BIOS_PROG), true)
# 	LDSRC := ../bios_linker.ld
# else
# 	LDSRC := ../prog_linker.ld
# endif

GCC_OPTS += -mabi=ilp32 -march=rv32i -static -mstrict-align -mcmodel=medany -nostartfiles -T $(LDSRC)

default: $(TARGET).elf

SOURCES = $(CSRCS) $(SSRCS) ../startup.s
ifeq ($(INCLUDE_LIB), true)
	SOURCES += $(LIB_SOURCES)
endif

# objdump is called before strip because it inlines functions and makes the assembly harder to read
$(TARGET).elf: $(SOURCES)
	$(RISCV_DEFAULT)-gcc $(GCC_OPTS) -I$(LIB_PATH) $^ -o $@
	$(RISCV_DEFAULT)-objdump -D -Mnumeric $@ > $(basename $@).dump
	$(RISCV_DEFAULT)-strip -R .comment -R .note.gnu.build-id $@
	$(RISCV_DEFAULT)-objcopy $(basename $@).elf -O binary $(basename $@).bin
	$(RISCV_DEFAULT)-bin2hex -w 32 $(basename $@).bin $(basename $@).hex
	sed -i '1i @0' $(basename $@).hex
# cp $(basename $@).hex ../../rtl/mem.hex

clean:
	rm -f *.elf *.dump *.hex *.bin

.PHONY: target
